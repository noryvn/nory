name: ci

on: [push, pull_request]

jobs:
  ci:
    name: continous integration
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - run: docker compose up -d

      - name: download dependency
        run: go mod download

      - name: build
        run: go build ./...

      - name: run vet
        run: go vet ./...

      - name: run test
        run: go test -race -vet=off -covermode=atomic -coverprofile=coverage.out ./...
        env:
          SUPABASE_KEY: "${{ secrets.SUPABASE_KEY }}"
          SUPABASE_URL: "${{ secrets.SUPABASE_URL }}"
          AUTH_USER_EMAIL: "${{ secrets.AUTH_USER_EMAIL }}"
          AUTH_USER_PASSWORD: "${{ secrets.AUTH_USER_PASSWORD }}"
          DATABASE_URL: "postgres://root:@127.0.0.1:26257/?sslmode=disable"

      - uses: codecov/codecov-action@v3
  cd:
    name: build docker image
    needs: ci
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/noryvn/nory
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.0.') }}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


